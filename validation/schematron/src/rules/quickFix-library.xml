<?xml version="1.0" encoding="UTF-8"?>
<sqf:fixes xmlns="http://purl.oclc.org/dsdl/schematron"
           xmlns:sqf="http://www.schematron-quickfix.com/validator/process"
           xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
		<sqf:fix id="addAttribute" use-for-each="1 to count($items)">
			   <sqf:param abstract="true" name="attribute"/>
			   <sqf:param abstract="true" name="attrValue"/>
			   <let name="explanations"
           value="      if (some $n in $items       satisfies contains($n, '[[')) then       for $n in $items       return        substring-before(substring-after($n, '[['), ']]')      else       ()"/>
			   <sqf:description>
				     <sqf:title>Add @$attribute=" <value-of select="$values[$sqf:current]"/> "</sqf:title>
				     <sqf:p>
					       <value-of select="$explanations[$sqf:current]"/>
				     </sqf:p>
			   </sqf:description>
			   <sqf:replace match="@$attribute"
                   node-type="attribute"
                   select="$values[$sqf:current]"
                   target="$attribute"
                   use-when="@$attribute"/>
			   <sqf:add node-type="attribute"
               select="$values[$sqf:current]"
               target="$attribute"
               use-when="not(@$attribute)"/>
		</sqf:fix>
		<!--////////-->
		<sqf:fix id="maxAttribute">
			   <sqf:param abstract="true" name="attribute"/>
			   <sqf:description>
				     <sqf:title>add @$attribute</sqf:title>
			   </sqf:description>
			   <let name="maxValue" value="max(descendant::node()//@$attribute)"/>
			   <sqf:add node-type="attribute" select="$maxValue" target="$attribute"/>
		</sqf:fix>
		<!--////////-->
		<sqf:fix id="minAttribute">
			   <sqf:param abstract="true" name="attribute"/>
			   <sqf:description>
				     <sqf:title>add @$attribute</sqf:title>
			   </sqf:description>
			   <let name="minValue" value="min(descendant::node()//@$attribute)"/>
			   <sqf:add node-type="attribute" select="$minValue" target="$attribute"/>
		</sqf:fix>
	</sqf:fixes>
